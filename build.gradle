buildscript {
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  dependencies {
    classpath Dependencies.junitGradlePlugin
    classpath Dependencies.kotlinGradlePlugin
    classpath Dependencies.dokkaGradlePlugin
    classpath Dependencies.mavenPublishGradlePlugin
    classpath Dependencies.spotlessPlugin
  }
}

allprojects {
  group = 'app.cash.certifikit'
  version = '0.3.0-SNAPSHOT'
}

subprojects {
  apply plugin: 'java-library'
  apply plugin: 'org.jetbrains.kotlin.multiplatform'
  apply plugin: 'org.jetbrains.dokka'
  apply plugin: 'com.diffplug.spotless'

  tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8.toString()
    targetCompatibility = JavaVersion.VERSION_1_8.toString()
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
      jvmTarget = JavaVersion.VERSION_1_8.toString()
      freeCompilerArgs += "-Xjvm-default=all"
    }
  }

  spotless {
    kotlin {
      target "**/*.kt"
      ktlint(Versions.ktlintVersion).userData(['indent_size': '2', 'continuation_indent_size': '2'])
    }
  }

  dokka {
    configuration {
      reportUndocumented = false
      skipDeprecated = true
      jdkVersion = 8
      perPackageOption {
        prefix = "app.cash.certifikit.internal"
        suppress = true
      }
      externalDocumentationLink {
        url = new URL("https://square.github.io/okio/2.x/okio/")
        packageListUrl = new URL("https://square.github.io/okio/2.x/okio/package-list")
      }
    }
  }
}

subprojects { project ->
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  test {
    useJUnitPlatform()
  }

  publishing {
    java {
      withJavadocJar()
      withSourcesJar()
    }

    publications {
      maven(MavenPublication) {
        groupId = project.group
        artifactId = project.name
        version = project.version
        from components.java
        pom {
          name = project.name
          description = 'Kotlin Certificate processing'
          url = 'https://cashapp.github.io/certifikit/'
          licenses {
            license {
              name = 'The Apache Software License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          developers {
            developer {
              name = 'Square, Inc.'
            }
          }
          scm {
            connection = 'scm:git:https://github.com/cashapp/certifikit.git'
            developerConnection = 'scm:git:ssh://git@github.com/cashapp/certifikit.git'
            url = 'https://github.com/cashapp/certifikit'
          }
        }
      }
    }

    repositories {
      maven {
        name = "mavencentral"
        url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        credentials {
          username System.getenv('SONATYPE_NEXUS_USERNAME')
          password System.getenv('SONATYPE_NEXUS_PASSWORD')
        }
      }
    }
  }

  signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = ""
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
  }
}

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

