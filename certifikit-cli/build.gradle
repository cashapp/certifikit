import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id 'application'
  id 'com.github.johnrengelman.shadow' version '6.0.0'
  id 'com.palantir.graal' version '0.7.1-13-gd190241'
}

shadowJar {
  mainClassName = 'app.cash.certifikit.cli.Main'
}

jar {
  manifest {
    attributes 'Automatic-Module-Name': 'app.cash.certifikit.cli'
    attributes 'Main-Class': 'app.cash.certifikit.cli.Main'
  }
}

//https://github.com/remkop/picocli/tree/master/picocli-codegen
configurations {
  generateConfig
}

dependencies {
  api project(':certifikit')
  api dep.okio
  implementation 'info.picocli:picocli:4.4.0'
  implementation 'com.squareup.okhttp3:okhttp:4.8.0'
  implementation 'com.squareup.okhttp3:okhttp-tls:4.8.0'

  annotationProcessor 'info.picocli:picocli-codegen:4.4.0'
  generateConfig 'info.picocli:picocli-codegen:4.4.0'

  compileOnly("org.graalvm.nativeimage:svm:20.1.0")

  testImplementation dep.junit
  testImplementation dep.assertj
}

application {
  mainClassName('app.cash.certifikit.cli.Main')
}

def reflectionOutputFile = "${buildDir}/resources/main/META-INF/native-image/${project.group}/${project.name}/reflect-config.json"

task(generateGraalReflectionConfig, dependsOn: 'classes', type: JavaExec) {
  main = 'picocli.codegen.aot.graalvm.ReflectionConfigGenerator'
  classpath = configurations.generateConfig + sourceSets.main.runtimeClasspath
  args = ["--output=$reflectionOutputFile", 'app.cash.certifikit.cli.Main']
}
assemble.dependsOn generateGraalReflectionConfig
assemble.dependsOn installShadowDist

graal {
  mainClass("app.cash.certifikit.cli.Main")
  outputName("cft")
  graalVersion('20.2.0')
  javaVersion('11')

  option("-H:ReflectionConfigurationFiles=${reflectionOutputFile}")
  option("--enable-https")
  option("--no-fallback")

  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    // May be possible without, but autodetection is problematic on Windows 10
    // see https://github.com/palantir/gradle-graal
    // see https://www.graalvm.org/docs/reference-manual/native-image/#prerequisites
    windowsVsVarsPath('C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat')
  }
}
nativeImage.dependsOn generateGraalReflectionConfig
assemble.dependsOn installShadowDist
