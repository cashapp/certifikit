//file:noinspection GroovyAssignabilityCheck
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id 'org.jetbrains.kotlin.multiplatform'
  id 'application'
  id 'com.palantir.graal'
  id "org.jetbrains.kotlin.kapt"
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

application {
  mainClassName = 'app.cash.certifikit.cli.Main'
}

kotlin {
  jvm {
    withJava()
    jvmJar {
      manifest {
        attributes 'Automatic-Module-Name': 'app.cash.certifikit.cli'
        attributes 'Main-Class': application.mainClassName
      }
    }
  }

  sourceSets {
    jvmMain {
      dependencies {
        api project(':certifikit')

        implementation(project.dependencies.platform(libs.com.squareup.okhttp3.okhttp.bom))
        implementation(project.dependencies.platform(libs.io.netty.netty.bom))

        api libs.com.squareup.okio
        implementation(libs.info.picocli)
        implementation(libs.com.squareup.okhttp3.okhttp)
        implementation(libs.com.squareup.okhttp3.okhttp.tls)
        implementation(libs.com.squareup.okhttp3.logging.interceptor)

        implementation(libs.io.projectreactor.netty.reactor.netty.core)
        implementation(libs.io.r2dbc.r2dbc.postgresql)
        implementation(libs.org.jetbrains.kotlinx.kotlinx.coroutines.reactive)

        implementation(libs.org.jetbrains.kotlinx.kotlinx.datetime)
        implementation(libs.org.jetbrains.kotlin.kotlin.reflect)
        implementation(libs.org.jetbrains.kotlin.kotlin.stdlib.jdk8)
        implementation(libs.org.jetbrains.kotlinx.kotlinx.coroutines.core)
        implementation(libs.org.jetbrains.kotlinx.kotlinx.coroutines.jdk8)

        implementation(libs.org.bouncycastle.bcpkix.jdk15on)
        implementation(libs.org.bouncycastle.bcprov.jdk15on)
        implementation(libs.org.bouncycastle.bctls.jdk15on)

//        configurations["kapt"].dependencies.add(project.dependencies.create(libs.info.picocli.picocli.codegen))
      }
    }

    jvmTest {
      dependencies {
        implementation libs.com.squareup.okhttp3.mockwebserver.junit5
        implementation(kotlin("test"))
        implementation libs.junit5Api
        implementation libs.junit5JupiterEngine
        implementation libs.assertj
      }
    }
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = "1.8"
    allWarningsAsErrors = false
    freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=enable", "-Xopt-in=kotlin.RequiresOptIn"]
  }
}

graal {
  mainClass(application.mainClassName)
  outputName("cft")
  graalVersion('21.3.0')
  javaVersion('11')

  option("--enable-https")
  option("--no-fallback")
  option("--allow-incomplete-classpath")
  option("--initialize-at-run-time=io.netty")
}

// Fixes for Gradle plugins missing on Jar location with -jvm- in name.
task copyJvmJar(type: Copy) {
  def sourceFile = project.tasks.getByName("jvmJar").outputs.files.singleFile
  def destFile = project.tasks.getByName("jar").outputs.files.singleFile
  from sourceFile
  into destFile.parentFile
  rename (sourceFile.name, destFile.name)
}

tasks.getByName("copyJvmJar").dependsOn(jvmJar)
tasks.getByName("nativeImage").dependsOn(copyJvmJar)

tasks.getByName("installDist").dependsOn(copyJvmJar)
